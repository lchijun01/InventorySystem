<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
    <%- include('partials/sidebar') %>
    <div class="container">
        <% if (typeof success !== 'undefined' && success) { %>
            <div class="alert alert-success" role="alert">
                <%= success %>
            </div>
        <% } %>
        <h1>Add New Product</h1>
        <form action="/add-product" method="POST">
            <div class="mb-3">
                <label for="product_name" class="form-label">Product Name:</label>
                <input type="text" id="product_name" name="product_name" class="form-control" required>
                <div id="product-warning" class="text-danger" style="display:none;">Product name already exists!</div>
            </div>

            <div class="mb-3">
                <label for="category_id" class="form-label">Category:</label>
                <select id="category_id" name="category_id" class="form-select" required>
                    <option value="">Select a Category</option>
                    <% categories.forEach(category => { %>
                        <option value="<%= category.id %>"><%= category.name %></option>
                    <% }) %>
                </select>
            </div>

            <div id="sku-container">
                <div class="mb-3 sku-row">
                    <label for="sku" class="form-label">SKU:</label>
                    <input type="text" id="sku" name="skus[]" class="form-control d-inline-block w-75" required>
                    <button type="button" class="btn btn-danger btn-sm remove-sku">Delete</button>
                </div>
            </div>

            <button type="button" id="add-sku" class="btn btn-secondary">Add Another SKU</button>
            <button type="submit" class="btn btn-primary">Add Product</button>
        </form>
    </div>

    <script>
        // Debounce function to limit the rate at which the check is performed
        function debounce(func, delay) {
            let timer;
            return function() {
                const context = this;
                const args = arguments;
                clearTimeout(timer);
                timer = setTimeout(() => func.apply(context, args), delay);
            };
        }

        // Function to check if product name exists
        function checkProductName() {
            const productName = document.getElementById('product_name').value.trim();
            const warning = document.getElementById('product-warning');
            const submitButton = document.querySelector('form button[type="submit"]');

            if (productName) {
                fetch(`/check-product?name=${encodeURIComponent(productName)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.exists) {
                            warning.style.display = 'block';
                            submitButton.disabled = true;  // Disable submit button if product exists
                        } else {
                            warning.style.display = 'none';
                            submitButton.disabled = false;  // Enable submit button if product is new
                        }
                    })
                    .catch(err => console.error('Error checking product name:', err));
            } else {
                // Clear the warning and disable the submit button if the input is empty
                warning.style.display = 'none';
                submitButton.disabled = true;
            }
        }

        // Attach event listener with debounce to the product name input
        const productNameInput = document.getElementById('product_name');
        productNameInput.addEventListener('input', debounce(checkProductName, 300));

        // Function to add a new SKU input row
        document.getElementById('add-sku').addEventListener('click', function() {
            const skuContainer = document.getElementById('sku-container');
            const newSku = document.createElement('div');
            newSku.className = 'mb-3 sku-row';
            newSku.innerHTML = `
                <label for="sku" class="form-label">SKU:</label>
                <input type="text" id="sku" name="skus[]" class="form-control d-inline-block w-75" required>
                <button type="button" class="btn btn-danger btn-sm remove-sku">Delete</button>
            `;
            skuContainer.appendChild(newSku);
        });

        // Function to remove a SKU input row
        document.getElementById('sku-container').addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-sku')) {
                const skuRow = e.target.closest('.sku-row');
                skuRow.remove();
            }
        });
    </script>
</body>
</html>
